generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model HACKATHON_Users {
  id                    String    @id @map("_id") @db.VarChar(36)
  name                  String?   @default("") @db.VarChar(100)
  email                 String    @unique(map: "email") @db.VarChar(255)
  date_of_birth         DateTime? @db.Date
  gender                String?   @default("") @db.VarChar(20)
  password              String?   @default("") @db.VarChar(255)
  phone_number          String?   @default("") @db.VarChar(255)
  created_at            DateTime? @default(now()) @db.Timestamp(0)
  updated_at            DateTime? @default(now()) @db.Timestamp(0)
  google_id             String?   @default("") @db.VarChar(100)
  role                  Int?      @default(0) @db.TinyInt

  HACKATHON_CVs     HACKATHON_CVs[]
}

model HACKATHON_CVs {
  id          String    @id @map("_id") @db.VarChar(36)
  user_id     String   @unique @db.VarChar(36)
  skills      String?          @db.Text
  experience  String?          @db.Text
  projects    String?          @db.Text
  education   String?          @db.Text
  created_at  DateTime?        @default(now()) @db.Timestamp(0)

  user        HACKATHON_Users    @relation(fields: [user_id], references: [id], onDelete: Cascade)
}


model HACKATHON_JDs {
  id                  Int       @id @default(autoincrement()) // AUTO_INCREMENT
  job_title           String    @db.VarChar(255)
  job_overview        String?   @db.Text
  job_experience      String?   @db.Text
  education_requirements String? @db.Text
  benefits            String?   @db.Text
  required_skills     String?   @db.Text
  created_at          DateTime  @default(now()) @db.Timestamp(0)
}